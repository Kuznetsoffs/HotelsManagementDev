&НаКлиенте
Перем ЗакрыватьСПараметрами Экспорт;
&НаСервере
Функция ПолучитьКлиентаПоФизЛицу(ФизическоеЛицо)

	Если ФизическоеЛицо.Пустая() Тогда
		Возврат Новый(Тип("СправочникСсылка.Клиенты"));
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Клиенты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Клиенты КАК Клиенты
		|ГДЕ
		|	Клиенты.ФизическоеЛицо = &ФизическоеЛицо
		|	И Клиенты.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)";
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка")[0];
	Иначе
		Возврат Новый(Тип("СправочникСсылка.Клиенты"));
	КонецЕсли; 

КонецФункции

&НаСервере
Процедура ЗаполнитьКО();

	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли; 	
	
	КонтактнаяИнформация = РаботаСКонтактнойИнформациейВызовСервера.ПолучитьЗначенияКО(Объект.Ссылка);	
	КонтактнаяИнформация.Свойство("Телефон",Телефон);
	КонтактнаяИнформация.Свойство("ЭлектроннаяПочта",ЭлектроннаяПочта);
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьФИО()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия  КАК Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя      КАК Имя,
	|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФИОФизЛицСрезПоследних.ФизЛицо = &ФизЛицо
	|");
	Запрос.УстановитьПараметр("ФизЛицо", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Фамилия = Выборка.Фамилия;
	Имя = Выборка.Имя;
	Отчество = Выборка.Отчество;
	
КонецПроцедуры


&НАСервере
Процедура ОповеститьОбОшибках(СписокОшибок)

	Для каждого Ошибка Из СписокОшибок Цикл
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = Ошибка.Представление;
		//Сообщение.Поле = Ошибка.Значение;
		Сообщение.ПутьКДанным = Ошибка.Значение;
		//Сообщение.УстановитьДанные();
		Сообщение.Сообщить(); 	
	
	КонецЦикла;

КонецПроцедуры



&НаСервере
Процедура ПроверитьПринадлежностьРеквизитовКО(Отказ = ЛОЖЬ)
	ОшибкаРеквизита = ЛОЖЬ;
	СписокОшибок = Новый СписокЗначений;
	КлиентФизЛица = ПолучитьКлиентаПоФизЛицу(Объект.Ссылка);
	//Проверим принадлежность Телефонного номера
	Если ЗначениеЗаполнено(Телефон) Тогда
		ПриведенныйНомер = РаботаСКонтактнойИнформациейКлиентСервер.ПриведенныйНомерТелефона(Телефон);		
		ВладелецТелефона = РаботаСконтактнойИнформациейВызовСервера.ПолучитьВЛадельцаКО("НомерПриведенный",ПриведенныйНомер);
		Если ТИПЗнч(ВладелецТелефона) = ТИП("СправочникСсылка.ФизическиеЛица") Тогда
			Если НЕ ВладелецТелефона = Объект.Ссылка Тогда
				ТекстОшибки = "Телефонный номер принадлежит физ. лицу: " + ВладелецТелефона.Наименование;
				ОшибкаРеквизита = ИСТИНА;	
			КонецЕсли; 
		ИначеЕсли ТИПЗнч(ВладелецТелефона) = ТИП("СправочникСсылка.Клиенты") Тогда
				ТекстОшибки = "Телефонный номер принадлежит Клиенту: " + ВладелецТелефона.Наименование;
				ОшибкаРеквизита = ИСТИНА;
		КонецЕсли; 
				
		Если ОшибкаРеквизита Тогда
			
			СписокОшибок.Добавить("Телефон",ТекстОшибки);
			Отказ = Истина;
			
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(ЭлектроннаяПочта) Тогда
		
		ВладелецАдреса = РаботаСконтактнойИнформациейВызовСервера.ПолучитьВЛадельцаКО("ЭлектроннаяПочта",ЭлектроннаяПочта);
		Если ТИПЗнч(ВладелецАдреса) = ТИП("СправочникСсылка.ФизическиеЛица") Тогда
			Если НЕ ВладелецАдреса = Объект.Ссылка Тогда
				ТекстОшибки = "Телефонный номер принадлежит физ. лицу: " + ВладелецАдреса.Наименование;
				ОшибкаРеквизита = ИСТИНА;	
				
			КонецЕсли; 
		ИначеЕсли ТИПЗнч(ВладелецАдреса) = ТИП("СправочникСсылка.Клиенты") Тогда
				ТекстОшибки = "Телефонный номер принадлежит Клиенту: "  + ВладелецАдреса.Наименование;
				ОшибкаРеквизита = ИСТИНА;
		КонецЕсли; 
		Если ОшибкаРеквизита Тогда
			СписокОшибок.Добавить("Телефон",ТекстОшибки);
			Отказ = Истина;
		КонецЕсли;
	
	КонецЕсли;	 
	ОповеститьОбОшибках(СписокОшибок);	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеРеквизитовКО(Отказ = ЛОЖЬ)

	СписокОшибок = Новый СписокЗначений;
	
	Если НЕ ЗначениеЗаполнено(Телефон) и НЕ ЗначениеЗаполнено(ЭлектроннаяПочта) Тогда
		СписокОшибок.Добавить("Телефон","Заполните значение Телефона");
		СписокОшибок.Добавить("ЭлектроннаяПочта","или значение Эл. почты");
		Отказ = Истина;
		ОповеститьОбОшибках(СписокОшибок);
		Возврат;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Телефон) Тогда
		ОшибкиЗаполненияТелефона = РаботаСКонтактнойИнформациейКлиентСервер.ОшибкиЗаполненияТелефона(Телефон);
		Если НЕ ОшибкиЗаполненияТелефона.Количество() = 0 Тогда
			Отказ = Истина;
			ОповеститьОбОшибках(ОшибкиЗаполненияТелефона);
			Возврат;	
		КонецЕсли; 
	КонецЕсли; 
	ПроверитьПринадлежностьРеквизитовКО(Отказ);
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьИЗаписатьРеквизитыПередЗаписьюСервер()

	Объект.Наименование = Фамилия + " " + Имя + " " + Отчество;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПроверитьЗаполнениеРеквизитовКО(Отказ);
	
	ОбновитьИЗаписатьРеквизитыПередЗаписьюСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановитьПривилегированныйРежим(Истина);	
	ДатаСеансаТекущая = ТекущаяДатаСеанса();
	СтруктураЗаписи = РегистрыСведений.ФИОФизЛиц.ПолучитьПоследнее(ДатаСеансаТекущая, Новый Структура("ФизЛицо", ТекущийОбъект.Ссылка));
	Если СтруктураЗаписи.Фамилия <> Фамилия
		ИЛИ СтруктураЗаписи.Отчество <> Отчество
		ИЛИ СтруктураЗаписи.Имя <> Имя Тогда
		МенеджерЗаписи = РегистрыСведений.ФИОФизЛиц.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ФизЛицо = ТекущийОбъект.Ссылка;
		МенеджерЗаписи.Период = ДатаСеансаТекущая;
		МенеджерЗаписи.Фамилия = Фамилия;
		МенеджерЗаписи.Имя = Имя;
		МенеджерЗаписи.Отчество = Отчество;
		МенеджерЗаписи.Записать(Истина);
	КонецЕсли;
	
	//Запишем значения контактной информации в регистр сведений
	КонтактнаяИнформация = РегистрыСведений.КонтактнаяИнформация;
	
	НаборЗаписей = КонтактнаяИнформация.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Владелец.Установить(ТекущийОбъект.Ссылка);
	НаборЗаписей.Прочитать();
	
	Если НЕ НаборЗаписей.Количество() = 0 Тогда; 
		НоваяЗапись = НаборЗаписей[0];
	Иначе
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Владелец = ТекущийОбъект.Ссылка;
	КонецЕсли;
	Если НЕ НоваяЗапись.НомерСохраненный = Телефон 
		ИЛИ НЕ НоваяЗапись.ЭлектроннаяПочта = ЭлектроннаяПочта Тогда
		НоваяЗапись.НомерПриведенный = РаботаСКонтактнойИнформациейКлиентСервер.ПриведенныйНомерТелефона(Телефон);
		НоваяЗапись.Владелец = ТекущийОбъект.Ссылка;
		НоваяЗапись.НомерСохраненный = Телефон;
		НоваяЗапись.ЭлектроннаяПочта = ЭлектроннаяПочта;
		НаборЗаписей.Записать(Истина);
	КонецЕсли; 
	УстановитьПривилегированныйРежим(Ложь);	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьФИО();
	ЗаполнитьКО();
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСпараметрами()
	ЗакрыватьСПараметрами = Ложь;
	Закрыть(Объект.Ссылка);
КонецПроцедуры


&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗакрыватьСПараметрами Тогда
	
		Отказ = Истина;
		ЗакрытьСпараметрами();
	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено(Телефон) Тогда
		Телефон = Объект.Телефон; // Временно, для переноса контактной информации в регистр	
	КонецЕсли; 
	ЗакрыватьСПараметрами = Параметры.ЗакрыватьСПараметрами;
КонецПроцедуры
