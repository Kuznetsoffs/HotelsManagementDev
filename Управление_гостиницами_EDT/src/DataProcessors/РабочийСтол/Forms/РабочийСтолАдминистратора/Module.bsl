&НаСервереБезКонтекста
Функция СформироватьСтрокуПредставления(СтрокаДанных,ВставитьДату = Ложь);
	ТекДокумент = СтрокаДанных.Документ;
	СтрокаПредставления = ?(ВставитьДату,"(" + Формат(НачалоДня(СтрокаДанных.Период + 1),"ДФ=dd.MM.yyyy") + ") ","") + 
						СокрЛП(ТекДокумент.Клиент.Наименование) + " | " +
						?(ТекДокумент.Гостиница.ГостиничныйКомплекс,ТекДокумент.Корпус,ТекДокумент.Гостиница) + " | " +
						СтрокаДанных.Номер;
						//?(Заезд," (Взрослых: " + ТекДокумент.Взрослых + " Детей: " + ТекДокумент.Детей + ")","");
	Возврат СтрокаПредставления;

КонецФункции // СформироватьСТрокуПредставления()

Процедура ЗаполнитьТекущуюСтрокуВыездов(ТекСтрока,СтрокаДанных,ВставитьДату = Ложь)
	ТекДокумент = СтрокаДанных.Документ;
	ТекСтрока.Документ = ТекДокумент;
	ТекСтрока.Представление = СформироватьСтрокуПредставления(СтрокаДанных,ВставитьДату);
	ТекСтрока.Комментарий = ?(СтрокаДанных.Переселение,"   (переселение)","");
КонецПроцедуры

Процедура ЗаполнитьТекущуюСтрокуЗаездов(ТекСтрока,СтрокаДанных,ВставитьДату = Ложь)
	ТекДокумент = СтрокаДанных.Документ;
	ТекСтрока.Документ = ТекДокумент;
	ТекСтрока.Представление = СформироватьСтрокуПредставления(СтрокаДанных,ВставитьДату);
	ТекСтрока.Комментарий = "   (Взрослых: " + ТекДокумент.Взрослых + " Детей: " + ТекДокумент.Детей + ") " + 
	?(ТекДокумент.Комментарий = "","","   " + ТекДокумент.Комментарий) + 
	?(СтрокаДанных.Переселение," (переселение)","");	
КонецПроцедуры

Процедура ЗаполнитьТаблицуАвтомобитей()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КарточкаБронирования.НомераАвто КАК НомераАвто,
		|	КарточкаБронирования.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА КарточкаБронирования.Клиент.ФизическоеЛицо = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|			ТОГДА КарточкаБронирования.Клиент
		|		ИНАЧЕ КарточкаБронирования.Клиент.ФизическоеЛицо
		|	КОНЕЦ КАК Клиент
		|ПОМЕСТИТЬ Документы
		|ИЗ
		|	Документ.КарточкаБронирования КАК КарточкаБронирования
		|ГДЕ
		|	КарточкаБронирования.ДатаЗаезда <= &ТекущаяДата
		|	И КарточкаБронирования.ДатаВыселения >= &ТекущаяДата
		|	И КарточкаБронирования.НомераАвто <> """"
		|	И ВЫБОР
		|			КОГДА &ОтборПоГостинице
		|				ТОГДА КарточкаБронирования.Гостиница = &ГостиничныйОбъект
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &ОтборПоКорпусу
		|				ТОГДА КарточкаБронирования.Корпус = &ГостиничныйОбъект
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтактнаяИнформация.НомерСохраненный КАК НомерСохраненный,
		|	КонтактнаяИнформация.Владелец КАК Владелец
		|ПОМЕСТИТЬ НомераТелефонов
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Владелец В
		|			(ВЫБРАТЬ
		|				Документы.Клиент КАК Клиент
		|			ИЗ
		|				Документы КАК Документы)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КарточкаБронированияСоставБрони.Номер КАК Номер,
		|	КарточкаБронированияСоставБрони.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ Номера
		|ИЗ
		|	Документ.КарточкаБронирования.СоставБрони КАК КарточкаБронированияСоставБрони
		|ГДЕ
		|	КарточкаБронированияСоставБрони.Ссылка В
		|			(ВЫБРАТЬ
		|				Документы.Ссылка КАК Ссылка
		|			ИЗ
		|				Документы КАК Документы)
		|	И КарточкаБронированияСоставБрони.ДатаЗаезда <= &ТекущаяДата
		|	И КарточкаБронированияСоставБрони.ДатаВыселения >= &ТекущаяДата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Документы.Ссылка КАК Ссылка,
		|	Документы.НомераАвто КАК НомераАвто,
		|	Документы.Клиент КАК Клиент,
		|	НомераТелефонов.НомерСохраненный КАК НомерТелефона,
		|	Номера.Номер КАК НомерПроживания
		|ИЗ
		|	Документы КАК Документы
		|		ЛЕВОЕ СОЕДИНЕНИЕ НомераТелефонов КАК НомераТелефонов
		|		ПО Документы.Клиент = НомераТелефонов.Владелец
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Номера КАК Номера
		|		ПО Документы.Ссылка = Номера.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомераАвто
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ДатаСегодня);
	Если ЗначениеЗаполнено(ГостиничныйОбъект) Тогда
		Запрос.УстановитьПараметр("ОтборПоГостинице",ТипЗНЧ(ГостиничныйОбъект) = Тип("СправочникСсылка.Гостиницы"));
		Запрос.УстановитьПараметр("ОтборПоКорпусу",ТипЗНЧ(ГостиничныйОбъект) = Тип("СправочникСсылка.Корпуса"));
	Иначе
		Запрос.УстановитьПараметр("ОтборПоГостинице",Ложь);
		Запрос.УстановитьПараметр("ОтборПоКорпусу",Ложь);
	КонецЕсли; 
	Запрос.УстановитьПараметр("ГостиничныйОбъект",ГостиничныйОбъект);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	АвтомобилиГостей.Очистить();
	Пока Выборка.Следующий() Цикл
		МассивНомеров = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Выборка.НомераАвто);
		Для каждого СтрокаНомера Из МассивНомеров Цикл
			НоваяСтрока = АвтомобилиГостей.Добавить();
			НоваяСтрока.НомерАвтомобиля = СтрокаНомера;
			НоваяСтрока.Клиент = Выборка.Клиент;
			НоваяСтрока.НомерТелефона = Выборка.НомерТелефона; 
			НоваяСтрока.НомерПроживания = Выборка.НомерПроживания; 			
			НоваяСтрока.Документ = Выборка.Ссылка;
		КонецЦикла;
		
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуЗаездов()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятостьНомеровСрезПервых.Регистратор КАК Документ,
		|	ЗанятостьНомеровСрезПервых.Период КАК Период,
		|	ВЫБОР
		|		КОГДА НЕ ЗанятостьНомеровСрезПервых.Регистратор.ДатаЗаезда = ЗанятостьНомеровСрезПервых.Период
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Переселение,
		|	ЗанятостьНомеровСрезПервых.Номер КАК Номер
		|ПОМЕСТИТЬ ЗаездыСегодня
		|ИЗ
		|	РегистрСведений.ЗанятостьНомеров.СрезПервых(
		|			&ДатаСегодня,
		|			Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНомеров.Забронирован)
		|				И Период = &ДатаСегодня
		|				И ВЫБОР
		|					КОГДА &ОтборПоГостинице
		|						ТОГДА Гостиница = &ГостиничныйОбъект
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ОтборПоКорпусу
		|						ТОГДА Корпус = &ГостиничныйОбъект
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК ЗанятостьНомеровСрезПервых
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятостьНомеровСрезПервых.Регистратор КАК Документ,
		|	ЗанятостьНомеровСрезПервых.Период КАК Период,
		|	ВЫБОР
		|		КОГДА НЕ ЗанятостьНомеровСрезПервых.Регистратор.ДатаЗаезда = ЗанятостьНомеровСрезПервых.Период
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Переселение,
		|	ЗанятостьНомеровСрезПервых.Номер КАК Номер
		|ПОМЕСТИТЬ ЗаездыЗавтра
		|ИЗ
		|	РегистрСведений.ЗанятостьНомеров.СрезПервых(
		|			ДОБАВИТЬКДАТЕ(&ДатаСегодня, ДЕНЬ, 1),
		|			Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНомеров.Забронирован)
		|				И Период = ДОБАВИТЬКДАТЕ(&ДатаСегодня, ДЕНЬ, 1)
		|				И ВЫБОР
		|					КОГДА &ОтборПоГостинице
		|						ТОГДА Гостиница = &ГостиничныйОбъект
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ОтборПоКорпусу
		|						ТОГДА Корпус = &ГостиничныйОбъект
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК ЗанятостьНомеровСрезПервых
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 15
		|	ЗанятостьНомеровСрезПервых.Регистратор КАК Документ,
		|	ЗанятостьНомеровСрезПервых.Период КАК Период,
		|	ВЫБОР
		|		КОГДА НЕ ЗанятостьНомеровСрезПервых.Регистратор.ДатаЗаезда = ЗанятостьНомеровСрезПервых.Период
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Переселение,
		|	ЗанятостьНомеровСрезПервых.Номер КАК Номер
		|ИЗ
		|	РегистрСведений.ЗанятостьНомеров.СрезПервых(
		|			ДОБАВИТЬКДАТЕ(&ДатаСегодня, ДЕНЬ, 2),
		|			Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНомеров.Забронирован)
		|				И ВЫБОР
		|					КОГДА &ОтборПоГостинице
		|						ТОГДА Гостиница = &ГостиничныйОбъект
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ОтборПоКорпусу
		|						ТОГДА Корпус = &ГостиничныйОбъект
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК ЗанятостьНомеровСрезПервых
		|ГДЕ
		|	НЕ ЗанятостьНомеровСрезПервых.Регистратор В
		|				(ВЫБРАТЬ
		|					ЗаездыСегодня.Документ
		|				ИЗ
		|					ЗаездыСегодня КАК ЗаездыСегодня)
		|	И НЕ ЗанятостьНомеровСрезПервых.Регистратор В
		|				(ВЫБРАТЬ
		|					ЗаездыЗавтра.Документ
		|				ИЗ
		|					ЗаездыЗавтра КАК ЗаездыЗавтра)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	
	Запрос.УстановитьПараметр("ДатаСегодня", ДатаСегодня);
	
	Если ЗначениеЗаполнено(ГостиничныйОбъект) Тогда
		Запрос.УстановитьПараметр("ОтборПоГостинице",ТипЗНЧ(ГостиничныйОбъект) = Тип("СправочникСсылка.Гостиницы"));
		Запрос.УстановитьПараметр("ОтборПоКорпусу",ТипЗНЧ(ГостиничныйОбъект) = Тип("СправочникСсылка.Корпуса"));
	Иначе
		Запрос.УстановитьПараметр("ОтборПоГостинице",Ложь);
		Запрос.УстановитьПараметр("ОтборПоКорпусу",Ложь);
	КонецЕсли; 
	Запрос.УстановитьПараметр("ГостиничныйОбъект",ГостиничныйОбъект);
	
	МассивРезультатов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	ЗаездыСегодня = МассивРезультатов[0].Выбрать();
	ЗаездыЗавтра = МассивРезультатов[1].Выбрать();
	ЗаездыБлижайшие = МассивРезультатов[2].Выбрать();
	
	Дерево = РеквизитФормыВЗначение("ТаблицаЗаселений");
	Дерево.Строки.Очистить();
	
	СтрокаСегодня = Дерево.Строки.Добавить();
	СтрокаСегодня.Представление = "Сегодня (" + ЗаездыСегодня.Количество() + ")";
	
	Если ЗаездыСегодня.Количество() = 0 Тогда
		Строка = СтрокаСегодня.Строки.Добавить();
		Строка.Представление = "<нет заездов>";
	Иначе	
		Пока ЗаездыСегодня.Следующий() Цикл
			Строка = СтрокаСегодня.Строки.Добавить();
			ЗаполнитьТекущуюСтрокуЗаездов(Строка,ЗаездыСегодня);
		КонецЦикла; 
	КонецЕсли;
	
	СтрокаЗавтра = Дерево.Строки.Добавить();
	СтрокаЗавтра.Представление = "Завтра (" + ЗаездыЗавтра.Количество() + ")";
	
	Если ЗаездыЗавтра.Количество() = 0 Тогда
		Строка = СтрокаЗавтра.Строки.Добавить();
		Строка.Представление = "<нет заездов>";
	Иначе	
		Пока ЗаездыЗавтра.Следующий() Цикл
			Строка = СтрокаЗавтра.Строки.Добавить();
			ЗаполнитьТекущуюСтрокуЗаездов(Строка,ЗаездыЗавтра);
		КонецЦикла; 
	КонецЕсли;
	
	СтрокаБлижайшие = Дерево.Строки.Добавить();
	СтрокаБлижайшие.Представление = "Ближайшие (" + ЗаездыБлижайшие.Количество() + ")";
	
	Если ЗаездыБлижайшие.Количество() = 0 Тогда
		Строка = СтрокаБлижайшие.Строки.Добавить();
		Строка.Представление = "<нет заездов>";
	Иначе	
		Пока ЗаездыБлижайшие.Следующий() Цикл
			Строка = СтрокаБлижайшие.Строки.Добавить();
			ЗаполнитьТекущуюСтрокуЗаездов(Строка,ЗаездыБлижайшие,Истина);
		КонецЦикла; 
	КонецЕсли;
		
	ЗначениеВРеквизитФормы(Дерево, "ТаблицаЗаселений");	
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуВыездов()
	ДатаСегодня = НачалоДня(ТекущаяДатаСеанса());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятостьНомеровСрезПервых.Регистратор КАК Документ,
		|	ЗанятостьНомеровСрезПервых.Номер КАК Номер,
		|	ЗанятостьНомеровСрезПервых.Период КАК Период,
		|	ВЫБОР
		|		КОГДА НЕ ЗанятостьНомеровСрезПервых.Регистратор.ДатаВыселения = ДОБАВИТЬКДАТЕ(ЗанятостьНомеровСрезПервых.Период, СЕКУНДА, 1)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Переселение
		|ПОМЕСТИТЬ ВыездыСегодня
		|ИЗ
		|	РегистрСведений.ЗанятостьНомеров.СрезПервых(
		|			ДОБАВИТЬКДАТЕ(&ДатаСегодня, СЕКУНДА, -1),
		|			Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНомеров.Свободен)
		|				И Период <= &ДатаСегодня
		|				И ВЫБОР
		|					КОГДА &ОтборПоГостинице
		|						ТОГДА Гостиница = &ГостиничныйОбъект
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ОтборПоКорпусу
		|						ТОГДА Корпус = &ГостиничныйОбъект
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК ЗанятостьНомеровСрезПервых
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятостьНомеровСрезПервых.Регистратор КАК Документ,
		|	ЗанятостьНомеровСрезПервых.Номер КАК Номер,
		|	ЗанятостьНомеровСрезПервых.Период КАК Период,
		|	ВЫБОР
		|		КОГДА НЕ ЗанятостьНомеровСрезПервых.Регистратор.ДатаВыселения = ДОБАВИТЬКДАТЕ(ЗанятостьНомеровСрезПервых.Период, СЕКУНДА, 1)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Переселение
		|ПОМЕСТИТЬ ВыездыЗавтра
		|ИЗ
		|	РегистрСведений.ЗанятостьНомеров.СрезПервых(
		|			КОНЕЦПЕРИОДА(&ДатаСегодня, ДЕНЬ),
		|			Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНомеров.Свободен)
		|				И Период <= ДОБАВИТЬКДАТЕ(&ДатаСегодня, ДЕНЬ, 1)
		|				И ВЫБОР
		|					КОГДА &ОтборПоГостинице
		|						ТОГДА Гостиница = &ГостиничныйОбъект
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ОтборПоКорпусу
		|						ТОГДА Корпус = &ГостиничныйОбъект
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК ЗанятостьНомеровСрезПервых
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 15
		|	ЗанятостьНомеровСрезПервых.Регистратор КАК Документ,
		|	ЗанятостьНомеровСрезПервых.Номер КАК Номер,
		|	ЗанятостьНомеровСрезПервых.Период КАК Период,
		|	ВЫБОР
		|		КОГДА НЕ ЗанятостьНомеровСрезПервых.Регистратор.ДатаВыселения = ДОБАВИТЬКДАТЕ(ЗанятостьНомеровСрезПервых.Период, СЕКУНДА, 1)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Переселение
		|ИЗ
		|	РегистрСведений.ЗанятостьНомеров.СрезПервых(
		|			ДОБАВИТЬКДАТЕ(&ДатаСегодня, ДЕНЬ, 1),
		|			Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНомеров.Свободен)
		|				И ВЫБОР
		|					КОГДА &ОтборПоГостинице
		|						ТОГДА Гостиница = &ГостиничныйОбъект
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ОтборПоКорпусу
		|						ТОГДА Корпус = &ГостиничныйОбъект
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК ЗанятостьНомеровСрезПервых
		|ГДЕ
		|	НЕ ЗанятостьНомеровСрезПервых.Регистратор В
		|				(ВЫБРАТЬ
		|					ВыездыСегодня.Документ
		|				ИЗ
		|					ВыездыСегодня КАК ВыездыСегодня)
		|	И НЕ ЗанятостьНомеровСрезПервых.Регистратор В
		|				(ВЫБРАТЬ
		|					ВыездыЗавтра.Документ
		|				ИЗ
		|					ВыездыЗавтра КАК ВыездыЗавтра)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ДатаСегодня", ДатаСегодня);
	
	Если ЗначениеЗаполнено(ГостиничныйОбъект) Тогда
		Запрос.УстановитьПараметр("ОтборПоГостинице",ТипЗНЧ(ГостиничныйОбъект) = Тип("СправочникСсылка.Гостиницы"));
		Запрос.УстановитьПараметр("ОтборПоКорпусу",ТипЗНЧ(ГостиничныйОбъект) = Тип("СправочникСсылка.Корпуса"));
	Иначе
		Запрос.УстановитьПараметр("ОтборПоГостинице",Ложь);
		Запрос.УстановитьПараметр("ОтборПоКорпусу",Ложь);
	КонецЕсли;
	Запрос.УстановитьПараметр("ГостиничныйОбъект",ГостиничныйОбъект);
	
	МассивРезультатов = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	ВыездыСегодня = МассивРезультатов[0].Выбрать();
	ВыездыЗавтра = МассивРезультатов[1].Выбрать();
	ВыездыБлижайшие = МассивРезультатов[2].Выбрать();
	
	Дерево = РеквизитФормыВЗначение("ТаблицаВыездов");
	Дерево.Строки.Очистить();
	
	СтрокаСегодня = Дерево.Строки.Добавить();
	СтрокаСегодня.Представление = "Сегодня (" + ВыездыСегодня.Количество() + ")";
	
	Если ВыездыСегодня.Количество() = 0 Тогда
		Строка = СтрокаСегодня.Строки.Добавить();
		Строка.Представление = "<нет выездов>";
	Иначе	
		Пока ВыездыСегодня.Следующий() Цикл
			Строка = СтрокаСегодня.Строки.Добавить();
			ЗаполнитьТекущуюСтрокуВыездов(Строка,ВыездыСегодня);
		КонецЦикла; 
	КонецЕсли;
	
	СтрокаЗавтра = Дерево.Строки.Добавить();
	СтрокаЗавтра.Представление = "Завтра (" + ВыездыЗавтра.Количество() + ")";
	
	Если ВыездыЗавтра.Количество() = 0 Тогда
		Строка = СтрокаЗавтра.Строки.Добавить();
		Строка.Представление = "<нет выездов>";
	Иначе	
		Пока ВыездыЗавтра.Следующий() Цикл
			Строка = СтрокаЗавтра.Строки.Добавить();
			ЗаполнитьТекущуюСтрокуВыездов(Строка,ВыездыЗавтра);
		КонецЦикла; 
	КонецЕсли;
	
	СтрокаБлижайшие = Дерево.Строки.Добавить();
	СтрокаБлижайшие.Представление = "Ближайшие (" + ВыездыБлижайшие.Количество() + ")";
	
	Если ВыездыБлижайшие.Количество() = 0 Тогда
		Строка = СтрокаБлижайшие.Строки.Добавить();
		Строка.Представление = "<нет выездов>";
	Иначе	
		Пока ВыездыБлижайшие.Следующий() Цикл
			Строка = СтрокаБлижайшие.Строки.Добавить();
			ЗаполнитьТекущуюСтрокуВыездов(Строка,ВыездыБлижайшие,Истина);
		КонецЦикла; 
	КонецЕсли;
		
	ЗначениеВРеквизитФормы(Дерево, "ТаблицаВыездов");
	

КонецПроцедуры

Процедура ЗаполнитьТаблицы()
	ЗаполнитьТаблицуЗаездов();
	ЗаполнитьТаблицуВыездов();
	ЗаполнитьТаблицуАвтомобитей();
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьСтрокиТаблицы(ТекТаблица)
	
	ДанныеФормы = Вычислить(ТекТаблица);
	Строки = ДанныеФормы.ПолучитьЭлементы();
	
	Для каждого Строка Из Строки Цикл
	
		Элементы[ТекТаблица].Развернуть(Строка.ПолучитьИдентификатор());
	
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииГостиничногоОбъекта()
	ЗаполнитьТаблицы();
	РазвернутьСтрокиТаблицы("ТаблицаЗаселений");
	РазвернутьСтрокиТаблицы("ТаблицаВыездов");
КонецПроцедуры

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ОбновитьВыселения(Команда = Неопределено)
	ЗаполнитьТаблицуВыездов();
	РазвернутьСтрокиТаблицы("ТаблицаВыездов");	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаезды(Команда = Неопределено)
	ЗаполнитьТаблицуЗаездов();
	РазвернутьСтрокиТаблицы("ТаблицаЗаселений");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОповещений

&НаКлиенте
Процедура ПослеЗакрытияКарточкиБронирования(Результат,ДопПараметры) Экспорт
	
	Если ДопПараметры.ТекТаблица = "ТаблицаЗаселений" Тогда
		ЗаполнитьТаблицуЗаездов();	
		РазвернутьСтрокиТаблицы(ДопПараметры.ТекТаблица);
	ИначеЕсли ДопПараметры.ТекТаблица = "ТаблицаВыездов" Тогда
		ЗаполнитьТаблицуВыездов();                       
		РазвернутьСтрокиТаблицы(ДопПараметры.ТекТаблица);
	ИначеЕсли ДопПараметры.ТекТаблица = "АвтомобилиГостей" Тогда
		ЗаполнитьТаблицуАвтомобитей();	
	КонецЕсли; 

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДатаСегодня = НачалоДня(ТекущаяДатаСеанса());
	Элементы.ТекущаяДата.Заголовок = Формат(ДатаСегодня, "ДЛФ=DD");
	Элементы.ДеньНедели.Заголовок = "(" + Формат(ДатаСегодня, "ДФ=дддд") + ")";
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ПолученыДанныеИзНастроек = Истина;
	ЗаполнитьТаблицы();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Если созраняемые данные никогда не сохранялись
	//то загрузки настроек не происходит
	//тогда запустим обработку заполнения таблиц отсюда
#Если ВебКлиент Тогда 
	Элементы.СтраницыВидовИнтерфейса.ТекущаяСтраница = Элементы.ДляВебЧерезБраузер;
#ИНАЧЕЕСЛИ МобильныйКлиент ТОГДА
	Элементы.СтраницыВидовИнтерфейса.ТекущаяСтраница = Элементы.ДляТонкогоКлиента;
	Элементы.грЗаселения.ОтображатьЗаголовок = Истина;
	Элементы.грВыезды.ОтображатьЗаголовок = Истина;
	Элементы.грАвтомобилиГостей.ОтображатьЗаголовок = Истина;
	Элементы.ТаблицаВыездов.Шапка = Ложь;
	Элементы.ТаблицаЗаселений.Шапка = Ложь;	
	Элементы.АвтомобилиГостей.Шапка = Ложь;
	Элементы.грАвтомобилиГостейШапка.Группировка = ГруппировкаКолонок.Вертикальная;
	Элементы.АвтомобилиГостей.ЧередованиеЦветовСтрок = Истина;
	Элементы.грВыездыЗаселения.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
#ИНАЧЕ
	Элементы.СтраницыВидовИнтерфейса.ТекущаяСтраница = Элементы.ДляТонкогоКлиента;	
	Если Не ПолученыДанныеИзНастроек Тогда 
		ЗаполнитьТаблицы();	
	КонецЕсли; 	
#КОНЕЦЕСЛИ
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицыВЗВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Документ) Тогда
		
		ПараметрыФормы = Новый Структура("Ключ",ТекущиеДанные.Документ);
		ДопПараметры = Новый Структура("ТекТаблица",Элемент.Имя);
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияКарточкиБронирования",ЭтаФорма,ДопПараметры);
		ОткрытьФорму("Документ.КарточкаБронирования.ФормаОбъекта",ПараметрыФормы,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.Независимый);
		
	КонецЕсли; 	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьШахматку(Команда)
	ОткрытьФорму("Обработка.Шахматка_MXL.Форма.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ОбъектБронированияПриИзменении(Элемент)
	ПриИзмененииГостиничногоОбъекта();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектБронированияОчистка(Элемент, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура Выйти(Команда)
	ЗавершитьРаботуСистемы(ЛОЖЬ);
КонецПроцедуры

&НаКлиенте
Процедура АвтомобилиГостейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Документ) Тогда
		
		ПараметрыФормы = Новый Структура("Ключ",ТекущиеДанные.Документ);
		ДопПараметры = Новый Структура("ТекТаблица",Элемент.Имя);
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияКарточкиБронирования",ЭтаФорма,ДопПараметры);
		ОткрытьФорму("Документ.КарточкаБронирования.ФормаОбъекта",ПараметрыФормы,ЭтаФорма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.Независимый);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНовуюШахматку(Команда)
	ОткрытьФорму("Обработка.Шахматка.Форма");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

	
#КонецОбласти