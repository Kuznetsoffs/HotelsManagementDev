#Область Служебные

&НаСервереБезКонтекста
Функция ЭтоГостиничныйКомплекс(Знач Гостиница)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Гостиницы.ГостиничныйКомплекс
	|ИЗ
	|	Справочник.Гостиницы КАК Гостиницы
	|ГДЕ
	|	Гостиницы.Ссылка = &Ссылка";	
	Запрос.Параметры("Ссылка",Гостиница);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.ГостиничныйКомплекс;
	
КонецФункции // ЭтоГостиничныйКомплекс()	

&НаСервереБезКонтекста
Функция ПолучитьСуммуОплатПоДокументу(Ссылка)
	Результат = Новый Структура("СуммаНачислений,СуммаОплат",0,0);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасчетыСКлиентамиОбороты.СуммаПриход КАК СуммаОплат,
		|	РасчетыСКлиентамиОбороты.СуммаРасход КАК СуммаНачислений
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами.Обороты(, , Авто, ОбъектРасчетов = &Ссылка) КАК РасчетыСКлиентамиОбороты";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Результат,Выборка);		
		Возврат Результат;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции // ()


&НаСервере
Процедура ПересчетСтроки(Колонка,ТекущиеДанные);
	
	Если Колонка = "Цена" Тогда
		Текущиеданные.ЦенаЗаданаВручную = Истина;
	ИначеЕсли Колонка = "Дата" Тогда
		ЦеныНомера = УстановкаЦенСервер.ПериодыЦеныНомера(ТекущиеДанные.Номер,ТекущиеДанные.ДатаЗаезда,ТекущиеДанные.ДатаВыселения);
		Если ЦеныНомера = Неопределено или ТекущиеДанные.ЦенаЗаданаВручную Тогда
			ТекущиеДанные.КоличествоДней = РаботаСДатамиКлиентСервер.КоличествоДней(ТекущиеДанные.ДатаЗаезда,ТекущиеДанные.ДатаВыселения);
			Если НЕ ТекущиеДанные.ДатаВыселения = Объект.ДатаВыселения Тогда
				ТекущиеДанные.КоличествоДней = ТекущиеДанные.КоличествоДней + 1;
			КонецЕсли; 
			
		Иначе //при изменении периода "зацепили" период с другой ценой
			//следует разделить строки с разными ценам
			
		КонецЕсли; 
	
	КонецЕсли;
	ТекущиеДанные.Сумма = Текущиеданные.КоличествоДней * ТекущиеДанные.Цена;
	 
КонецПроцедуры
	
&НаСервере
Процедура ПересчетСтрок(Колонка = Неопределено,ПересчетСтрок = Ложь)

	Если ПересчетСтрок Тогда
		Для каждого ТекущиеДанные Из Объект.СоставБрони Цикл
		
			ПересчетСтроки(Колонка,ТекущиеДанные);	
		
		КонецЦикла;
	Иначе
		ТекущиеДанные = Объект.СоставБрони.НайтиПоИдентификатору(Элементы.СоставБрони.ТекущаяСтрока);
		ПересчетСтроки(Колонка,ТекущиеДанные);	
	КонецЕсли;
	

КонецПроцедуры

&НаКлиенте
Процедура УправлениеДоступностью()
		
	Если ЗначениеЗаполнено(Объект.Гостиница) Тогда
		ДоступностьКорпуса = УправлениеГостиницамиКлиент.ЭтоГостиничныйКомплекс(Объект.Гостиница);
	Иначе
		ДоступностьКорпуса = Ложь;
		
	КонецЕсли; 
	Элементы.Корпус.Доступность = ДоступностьКорпуса;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеПараметрамиВыбора()
	
	МассивПараметров = Новый Массив();
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Владелец",Объект.Гостиница));
	Элементы.Корпус.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	Если ЗначениеЗаполнено(Объект.Гостиница) Тогда
		Если НЕ УправлениеГостиницамиСервер.ЭтоГостиничныйКомплекс(Объект.Гостиница) Тогда
		    Владелец  = Объект.Гостиница;
		ИначеЕсли ЗначениеЗаполнено(Объект.Корпус) Тогда
			Владелец = Объект.Корпус;
		Иначе
			Владелец = Справочники.Корпуса.ПустаяСсылка();
		КонецЕсли; 	
		МассивПараметров = Новый Массив();
		МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Владелец",Владелец));
		Элементы.СоставБрониНомер.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	КонецЕсли; 
	
	

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНомеров(Владелец)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номера.Ссылка КАК ОбъектЦены,
		|	0 КАК Цена
		|ИЗ
		|	Справочник.Номера КАК Номера
		|ГДЕ
		|	Номера.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Владелец);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
	
		ЗначениеВРеквизитФормы(РезультатЗапроса.Выгрузить(),"ТаблицаЦенНомеров");
	
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти 
#Область ОбработчикиОповещений

&НаКлиенте
Процедура ПослеЗакрытияФормыНовогоДокументаОплаты(Результат,ДопПараметры) Экспорт


КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормыДокументаОплаты(Результат,ДопПараметры) Экспорт

	ОбновитьРасчеты();	

КонецПроцедуры



#КонецОбласти

&НаКлиенте
Процедура ОбновитьРасчеты()

	СуммыРасчетов = ПолучитьСуммуОплатПоДокументу(Объект.Ссылка);
	ЗаголовокРасчета =  "Расчеты с клиентом: ";
	Если СуммыРасчетов.СуммаНачислений = СуммыРасчетов.СуммаОплат Тогда
		ЗаголовокРасчета = ЗаголовокРасчета + "Заказ полностью оплачен";
	ИначеЕсли СуммыРасчетов.СуммаНачислений < СуммыРасчетов.СуммаОплат Тогда
		ЗаголовокРасчета = ЗаголовокРасчета + "Переплата по заказу!";	
	Иначе
		ЗаголовокРасчета = ЗаголовокРасчета + ?(СуммыРасчетов.СуммаОплат = 0, "Долг по заказу: ", "Оплачено: " + СуммыРасчетов.СуммаОплат + ", остаток задолженности: ") + (СуммыРасчетов.СуммаНачислений - СуммыРасчетов.СуммаОплат) ;	
	КонецЕсли; 
	Элементы.СсылкаРасчеты.Заголовок = ЗаголовокРасчета;
	
КонецПроцедуры


&НаКлиенте
Процедура ГостиницаПриИзменении(Элемент)
	Если НЕ УправлениеГостиницамиКлиент.ЭтоГостиничныйКомплекс(Объект.Гостиница) Тогда
	   
	Иначе	
		
	КонецЕсли; 
	
	УправлениеДоступностью();
	УправлениеПараметрамиВыбора();
	
	Объект.Корпус = Новый (Тип("СправочникСсылка.Корпуса"));

КонецПроцедуры

&НаКлиенте
Процедура КорпусПриИзменении(Элемент)
	Если Объект.СоставБрони.Количество() = 0 Тогда
			
	Иначе
		
	КонецЕсли; 
	УправлениеДоступностью();
	УправлениеПараметрамиВыбора();

КонецПроцедуры

&НаКлиенте
Процедура СоставБрониНомерАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	Владелец = ?(ЗначениеЗаполнено(Объект.Корпус),Объект.Корпус,Объект.Гостиница);
	Отбор = Новый Структура("Владелец",Владелец);
	ПараметрыПолученияДанных.Отбор = Отбор;
КонецПроцедуры

&НаКлиенте
Процедура СоставБрониНомерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//СтандартнаяОбработка = ЛОЖЬ;
	//Владелец = ?(ЗначениеЗаполнено(Объект.Корпус),Объект.Корпус,Объект.Гостиница);
	//ПараметрыФормы = Новый Структура("РежимВыбора,Отбор",ИСТИНА,Новый Структура("Владелец",Владелец));
	//ОткрытьФорму("Справочник.Номера.ФормаВыбора",ПАраметрыФормы,Элемент);
КонецПроцедуры

&НаСервере
Функция ПолучитьЦенуСервер(Номер,Дата)

	Возврат УстановкаЦенСервер.ПолучитьЦену(Номер,Дата);

КонецФункции // ПолучитьЦенуСервер()

&НаСервере
Процедура УстановитьЗначениеОтбораСпискаОплат(Параметр)

	ТаблицаОплат.Параметры.УстановитьЗначениеПараметра(Параметр,Объект[Параметр]);

КонецПроцедуры


&НаКлиенте
Процедура УстановитьЦену(ДанныеТекущейСтроки)
	
	Цена = ПолучитьЦенуСервер(ДанныеТекущейСтроки.Номер,ДанныеТекущейСтроки.ДатаЗаезда);
	ДанныеТекущейСтроки.Цена = Цена;
	ДанныеТекущейСтроки.Сумма = Цена * ДанныеТекущейСТроки.КоличествоДней;

КонецПроцедуры


&НаКлиенте
Процедура СоставБрониНомерОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	ПериодыЦены = УстановкаЦенСервер.ПериодыЦеныНомера(ВыбранноеЗначение,Объект.ДатаЗаезда,Объект.ДатаВыселения);
	ДанныеТекущейСтроки = Элемент.Родитель.ТекущиеДанные;
	ДанныеТекущейСтроки.Номер = ВыбранноеЗначение;
	ДанныеТекущейСтроки.ДатаЗаезда = Объект.ДатаЗаезда;
	Если ПериодыЦены = Неопределено Тогда 
		ДанныеТекущейСтроки.ДатаВыселения = Объект.ДатаВыселения;
		ДанныеТекущейСтроки.КоличествоДней = РаботаСДатамиКлиентСервер.КоличествоДней(Объект.ДатаЗаезда,Объект.ДатаВыселения);
		УстановитьЦену(ДанныеТекущейСтроки);
	Иначе    //Если для периода бронирования на номер действуют разные цены
		Для каждого ДатаЦены Из ПериодыЦены Цикл
			ДанныеТекущейСтроки.ДатаВыселения = НачалоДня(НачалоДня(ДатаЦены) - 1);
			ДанныеТекущейСтроки.КоличествоДней = РаботаСДатамиКлиентСервер.КоличествоДней(ДанныеТекущейСТроки.ДатаЗаезда,ДатаЦены);
		    УстановитьЦену(ДанныеТекущейСтроки);
			ДанныеТекущейСтроки = Объект.СоставБрони.Добавить();
			ДанныеТекущейСтроки.ДатаЗаезда = ДатаЦены;
			ДанныеТекущейСтроки.Номер = ВыбранноеЗначение;
		КонецЦикла;
		
			ДанныеТекущейСтроки.ДатаВыселения = Объект.ДатаВыселения;
			ДанныеТекущейСтроки.КоличествоДней = РаботаСДатамиКлиентСервер.КоличествоДней(ДанныеТекущейСТроки.ДатаЗаезда,ДанныеТекущейСТроки.ДатаВыселения);
		    УстановитьЦену(ДанныеТекущейСтроки);

	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СоставБрониПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если НЕ ПроверитьЗаполнение() Тогда
		Отказ = Истина;			
	КонецЕсли;
КонецПроцедуры

#Область ОбработчикиСобытйФормы
	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Объект.СтатусБрони = Перечисления.СтатусБрони.Предварительная;
		Объект.ДатаПлатежа = РаботаСДатамиКлиентСервер.ПрибавитьДень(ТекущаяДатаСеанса(),2);
	Иначе
		////Установаим Отбор Таблицы оплат
		//ПолеОтбора = ТаблицаОплат.Отбор.ДоступныеПоляОтбора.Элементы.Найти("ОбъектРасчетов").Поле;
		//ЭлементОтбора = ТаблицаОплат.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		//ЭлементОтбора.ЛевоеЗначение = ПолеОтбора;
		//ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;
		//ЭлементОтбора.Использование = Истина;
		//ПолеОтбора = ТаблицаОплат.Отбор.ДоступныеПоляОтбора.Элементы.Найти("Регистратор").Поле;
		//ЭлементОтбора = ТаблицаОплат.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
		//ЭлементОтбора.ЛевоеЗначение = ПолеОтбора;
		//ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;
		//ЭлементОтбора.Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.СуммаДокумента = Объект.СоставБрони.Итог("Сумма") + Объект.ДополнительныеУслуги.Итог("Сумма");
КонецПроцедуры

&НаКлиенте
Процедура СоставБрониЦенаПриИзменении(Элемент)
	
	ПересчетСтрок("Цена");
	
КонецПроцедуры

&НаКлиенте
Процедура СоставБрониДатаВыездаПриИзменении(Элемент)
	ПересчетСтрок("Дата");
КонецПроцедуры

&НаКлиенте
Процедура СоставБрониДатаЗаездаПриИзменении(Элемент)
	ПересчетСтрок("Дата");
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСуществующий(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьДанныеФормыНаСервере(ДанныеФормы,Ссылка)

	ДанныеФормы.ДокументОснование = Ссылка.Ссылка;
	ДанныеФормы.Клиент = Ссылка.Клиент;
	ДанныеФормы.ПринятоОт = Ссылка.Клиент.Наименование;
	ДанныеФормы.Организация = Ссылка.Гостиница.Организация;

КонецПроцедуры


&НаКлиенте
Процедура РасчетыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияФормыНовогоДокументаОплаты",ЭтаФорма);
	ФормаНового = ОткрытьФорму("Документ.ПоступлениеОплаты.Форма.ФормаДокумента",,ЭтаФорма,ЭтаФорма,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ДанныеОбъектаФормы = ФормаНового.Объект;
	ДанныеРасчетов = ПолучитьСуммуОплатПоДокументу(Объект.Ссылка);
	Если ДанныеРасчетов.СуммаНачислений = 0 Тогда
		Возврат; //Начислений по документу нет. Возможно он не проведен
	КонецЕсли; 
	
	Если ДанныеРасчетов.СуммаНачислений = ДанныеРасчетов.СуммаОплат Тогда
		Возврат; //Документ полностью оплачен
	КонецЕсли; 
	
	Если ДанныеРасчетов.СуммаНачислений < ДанныеРасчетов.СуммаОплат Тогда
		Возврат; //Переплата по документу
	КонецЕсли; 
	
	ЗаполнитьДанныеФормыНаСервере(ДанныеОбъектаФормы,Объект.Ссылка);
	
	Если ДанныеРасчетов.СуммаОплат = 0 Тогда
		//По документу еще не вносились оплаты. Вероятно это предоплата
		//Сумму документа Поступления опалаты указывать не будем
		ДанныеОбъектаФормы.Основание = "Предоплата за бронирование";
	Иначе
		ДанныеОбъектаФормы.СуммаДокумента = ДанныеРасчетов.СуммаНачислений - ДанныеРасчетов.СуммаОплат;
		ДанныеОбъектаФормы.Основание = "Оплата за бронирование";
	КонецЕсли; 
	КопироватьДанныеФормы(ДанныеОбъектаФормы,ФормаНового.Объект);	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОплатВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОплатВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекДокумент = Элемент.ТекущиеДанные.Регистратор;
	ПараметрыФормы = Новый Структура("Ключ",ТекДокумент);
	ОбработкаЗакрытия = Новый ОписаниеОповещения("ПослеЗакрытияФормыДокументаОплаты",ЭтаФорма);
	Форма = ОткрытьФорму("Документ.ПоступлениеОплаты.Форма.ФормаДокумента",ПараметрыФормы,ЭтаФорма,ТекДокумент);
КонецПроцедуры

&НаКлиенте
Процедура СсылкаРасчетыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура кнОбновитьРасчетыНажатие(Элемент)
	ОбновитьРасчеты();	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеКомментария()
	Если ЗначениеЗаполнено(Объект.Комментарий) Тогда
		ТекстЗаголовка = Объект.Комментарий;	
	Иначе
		ТекстЗаголовка = "Добавьте комментарий";
	КонецЕсли;
	Элементы.НадписьКомментарий.Заголовок = ТекстЗаголовка;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
#Если МобильныйКлиент или ВебКлиент Тогда
//Элементы.СоставБрони.Шапка = Ложь; //отключение шапки вызывает сбой мобильного приложения при повороте
//Элементы.Гости.Шапка = Ложь;  	
//Элементы.ДополнительныеУслуги.Шапка = Ложь;
Элементы.грБрониДаты.Группировка = ГруппировкаКолонок.Вертикальная;
Элементы.грБрониСуммы.Группировка = ГруппировкаКолонок.Вертикальная;
Элементы.грДополнительнаяИнформация.ОтображатьЗаголовок = Истина;
#КонецЕсли
	ОбновитьРасчеты();
	ОбновитьОтображениеКомментария();
	УстановитьЗначениеОтбораСпискаОплат("Ссылка");
	УправлениеПараметрамиВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаРасчетыНажатие(Элемент)
	Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаРасчеты;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОплатПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНовый(Команда)
	//Отказ = Истина;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияФормыНовогоДокументаОплаты",ЭтаФорма);
	ФормаНового = ОткрытьФорму("Документ.ПоступлениеОплаты.Форма.ФормаДокумента",,ЭтаФорма,ЭтаФорма,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ДанныеОбъектаФормы = ФормаНового.Объект;
	ДанныеРасчетов = ПолучитьСуммуОплатПоДокументу(Объект.Ссылка);
	Если ДанныеРасчетов.СуммаНачислений = 0 Тогда
		Возврат; //Начислений по документу нет. Возможно он не проведен
	КонецЕсли; 
	
	Если ДанныеРасчетов.СуммаНачислений = ДанныеРасчетов.СуммаОплат Тогда
		Возврат; //Документ полностью оплачен
	КонецЕсли; 
	
	Если ДанныеРасчетов.СуммаНачислений < ДанныеРасчетов.СуммаОплат Тогда
		Возврат; //Переплата по документу
	КонецЕсли; 
	
	ЗаполнитьДанныеФормыНаСервере(ДанныеОбъектаФормы,Объект.Ссылка);
	
	Если ДанныеРасчетов.СуммаОплат = 0 Тогда
		//По документу еще не вносились оплаты. Вероятно это предоплата
		//Сумму документа Поступления опалаты указывать не будем
		ДанныеОбъектаФормы.Основание = "Предоплата за бронирование";
	Иначе
		ДанныеОбъектаФормы.СуммаДокумента = ДанныеРасчетов.СуммаНачислений - ДанныеРасчетов.СуммаОплат;
		ДанныеОбъектаФормы.Основание = "Оплата за бронирование";
	КонецЕсли; 
	КопироватьДанныеФормы(ДанныеОбъектаФормы,ФормаНового.Объект);
КонецПроцедуры

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановитьЗначениеОтбораСпискаОплат("Ссылка");
КонецПроцедуры

&НаКлиенте
Процедура НадписьКомментарийНажатие(Элемент)
	ОповещениеПослеВводаСтроки = Новый ОписаниеОповещения("НадписьКомментарийНажатиеЗавершение", ЭтотОбъект, Объект.Комментарий);
	ПоказатьВводСтроки(ОповещениеПослеВводаСтроки, Объект.Комментарий,"Комментарий",,Истина);
КонецПроцедуры

&НаКлиенте
Процедура НадписьКомментарийНажатиеЗавершение(Строка, ДополнительныеПараметры) Экспорт
	
	Если НЕ Строка = Неопределено Тогда
		Объект.Комментарий = Строка;
	КонецЕсли;
	ОбновитьОтображениеКомментария();	
	
КонецПроцедуры


#КонецОбласти