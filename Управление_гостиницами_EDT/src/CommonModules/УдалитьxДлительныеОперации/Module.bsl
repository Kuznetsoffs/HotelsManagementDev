//Функция ПрочитатьПрогрессИСообщения(Знач ИдентификаторЗадания, Знач Режим = "ПрогрессИСообщения")
//	
//	Результат = Новый Структура("Сообщения, Прогресс", Новый Массив, Неопределено);
//	
//	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторЗадания);
//	Если Задание = Неопределено Тогда
//		Возврат Результат;
//	КонецЕсли;
//	
//	МассивСообщений = Задание.ПолучитьСообщенияПользователю(Истина);
//	Если МассивСообщений = Неопределено Тогда
//		Возврат Результат;
//	КонецЕсли;
//	
//	Количество = МассивСообщений.Количество();
//	Сообщения = Новый Массив;
//	ЧитатьСообщения = (Режим = "ПрогрессИСообщения" Или Режим = "Сообщения"); 
//	ЧитатьПрогресс  = (Режим = "ПрогрессИСообщения" Или Режим = "Прогресс"); 
//	
//	Если ЧитатьСообщения И Не ЧитатьПрогресс Тогда
//		Результат.Сообщения = Новый ФиксированныйМассив(МассивСообщений);
//		Возврат Результат;
//	КонецЕсли;
//	
//	Для Номер = 0 По Количество - 1 Цикл
//		Сообщение = МассивСообщений[Номер];
//		
//		Если ЧитатьПрогресс И СтрНачинаетсяС(Сообщение.Текст, "{") Тогда
//			Позиция = СтрНайти(Сообщение.Текст, "}");
//			Если Позиция > 2 Тогда
//				ИдентификаторМеханизма = Сред(Сообщение.Текст, 2, Позиция - 2);
//				Если ИдентификаторМеханизма = СообщениеПрогресса() Тогда
//					ПолученныйТекст = Сред(Сообщение.Текст, Позиция + 1);
//					Результат.Прогресс = ОбщегоНазначения.ЗначениеИзСтрокиXML(ПолученныйТекст);
//					Продолжить;
//				КонецЕсли;
//			КонецЕсли;
//		КонецЕсли;
//		Если ЧитатьСообщения Тогда
//			Сообщения.Добавить(Сообщение);
//		КонецЕсли;
//	КонецЦикла;
//	
//	Результат.Сообщения = Новый ФиксированныйМассив(Сообщения);
//	Возврат Результат;
//	
//КонецФункции

//Функция ПараметрыВыполненияВФоне(Знач ИдентификаторФормы) Экспорт
//	
//	Результат = Новый Структура;
//	Результат.Вставить("ИдентификаторФормы", ИдентификаторФормы); 
//	Результат.Вставить("ДополнительныйРезультат", Ложь);
//	Результат.Вставить("ОжидатьЗавершение", ?(ПолучитьСкоростьКлиентскогоСоединения() = СкоростьКлиентскогоСоединения.Низкая, 4, 2));
//	Результат.Вставить("НаименованиеФоновогоЗадания", "");
//	Результат.Вставить("КлючФоновогоЗадания", "");
//	Результат.Вставить("АдресРезультата", Неопределено);
//	Результат.Вставить("ЗапуститьНеВФоне", Ложь);
//	Результат.Вставить("ЗапуститьВФоне", Ложь);
//	Результат.Вставить("БезРасширений", Ложь);
//	Возврат Результат;
//	
//КонецФункции

//Функция ЗапуститьФоновоеЗаданиеСКонтекстомКлиента(ИмяПроцедуры,ПараметрыВыполнения,ПараметрыПроцедуры = Неопределено) Экспорт
//	
//	КлючФоновогоЗадания = ПараметрыВыполнения.КлючФоновогоЗадания;
//	НаименованиеФоновогоЗадания = ?(ПустаяСтрока(ПараметрыВыполнения.НаименованиеФоновогоЗадания),
//		ИмяПроцедуры, ПараметрыВыполнения.НаименованиеФоновогоЗадания);
//		
//	ВсеПараметры = Новый Структура;
//	ВсеПараметры.Вставить("ИмяПроцедуры",       ИмяПроцедуры);
//	ВсеПараметры.Вставить("ПараметрыПроцедуры", ПараметрыПроцедуры);
//	//ВсеПараметры.Вставить("ПараметрыКлиентаНаСервере", СтандартныеПодсистемыСервер.ПараметрыКлиентаНаСервере());
//	
//	ПараметрыПроцедурыФоновогоЗадания = Новый Массив;
//	ПараметрыПроцедурыФоновогоЗадания.Добавить(ВсеПараметры);
//	
//	Возврат ВыполнитьФоновоеЗадание(ПараметрыВыполнения,
//		"ДлительныеОперации.ВыполнитьСКонтекстомКлиента", ПараметрыПроцедурыФоновогоЗадания,
//		КлючФоновогоЗадания, НаименованиеФоновогоЗадания);
//	
//КонецФункции

//Процедура ВыполнитьСКонтекстомКлиента(ВсеПараметры) Экспорт
//	
//	ВыполнитьПроцедуру(ВсеПараметры.ИмяПроцедуры, ВсеПараметры.ПараметрыПроцедуры);
//	
//КонецПроцедуры

//Функция ВыполнитьВФоне(Знач ИмяПроцедуры,Знач ПараметрыПроцедуры, Знач ПараметрыВыполнения) Экспорт
//	
//	
//	АдресРезультата = ?(ПараметрыВыполнения.АдресРезультата = Неопределено, 
//		ПоместитьВоВременноеХранилище(Неопределено,ПараметрыВыполнения.ИдентификаторФОрмы),
//		ПарметрыВыполнения.АдресРезультата);	
//		
//	Результат = Новый Структура;
//	Результат.Вставить("Статус",    "Выполняется");
//	Результат.Вставить("ИдентификаторЗадания", Неопределено);
//	Результат.Вставить("АдресРезультата", АдресРезультата);
//	Результат.Вставить("АдресДополнительногоРезультата", "");
//	Результат.Вставить("КраткоеПредставлениеОшибки", "");
//	Результат.Вставить("ПодробноеПредставлениеОшибки", "");
//	Результат.Вставить("Сообщения", Новый ФиксированныйМассив(Новый Массив));	
//	
//	ПараметрыЭкспортнойПроцедуры = Новый Массив;
//	ПараметрыЭкспортнойПроцедуры.Добавить(ПараметрыПроцедуры);
//	ПараметрыЭкспортнойПроцедуры.Добавить(АдресРезультата);
//	
//	Если ПараметрыВыполнения.ДополнительныйРезультат Тогда
//		Результат.АдресДополнительногоРезультата = ПоместитьВоВременноеХранилище(Неопределено, ПараметрыВыполнения.ИдентификаторФормы);
//		ПараметрыЭкспортнойПроцедуры.Добавить(Результат.АдресДополнительногоРезультата);
//	КонецЕсли;
//	
//	Попытка
//		Задание = ЗапуститьФоновоеЗаданиеСКонтекстомКлиента(ИмяПроцедуры,
//			ПараметрыВыполнения, ПараметрыЭкспортнойПроцедуры);
//	Исключение
//		Результат.Статус = "Ошибка";
//		Если Задание <> Неопределено И Задание.ИнформацияОбОшибке <> Неопределено Тогда
//			Результат.КраткоеПредставлениеОшибки = КраткоеПредставлениеОшибки(Задание.ИнформацияОбОшибке);
//			Результат.ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(Задание.ИнформацияОбОшибке);
//		Иначе
//			Результат.КраткоеПредставлениеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
//			Результат.ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
//		КонецЕсли;
//		Возврат Результат;
//	КонецПопытки;
//	
//	Если Задание <> Неопределено И Задание.ИнформацияОбОшибке <> Неопределено Тогда
//		Результат.Статус = "Ошибка";
//		Результат.КраткоеПредставлениеОшибки = КраткоеПредставлениеОшибки(Задание.ИнформацияОбОшибке);
//		Результат.ПодробноеПредставлениеОшибки = ПодробноеПредставлениеОшибки(Задание.ИнформацияОбОшибке);
//		Возврат Результат;
//	КонецЕсли;
//	
//	Результат.ИдентификаторЗадания = Задание.УникальныйИдентификатор;
//	ЗаданиеВыполнено = Ложь;
//	
//	Если ПараметрыВыполнения.ОжидатьЗавершение <> 0 Тогда
//		Попытка
//			Задание.ОжидатьЗавершения(ПараметрыВыполнения.ОжидатьЗавершение);
//			ЗаданиеВыполнено = Истина;
//		Исключение
//			//Обработка не требуется, вероятно исключение вызвано окончанием времени ожидания.
//		КонецПопытки;
//	КонецЕсли;
//	
//	Если ЗаданиеВыполнено Тогда
//		ПрогрессИСообщения = ПрочитатьПрогрессИСообщения(Задание.УникальныйИдентификатор, "ПрогрессИСообщения");
//		Результат.Сообщения = ПрогрессИСообщения.Сообщения;
//	КонецЕсли;
//	
//	ЗаполнитьЗначенияСвойств(Результат, ОперацияВыполнена(Задание.УникальныйИдентификатор), , "Сообщения");
//	Возврат Результат;
//	
//КонецФункции // ВыполнитьВФоне()()
